"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tiptap+extension-task-item@2.11.5_@tiptap+core@2.11.5_@tiptap+pm@2.11.5__@tiptap+pm@2.11.5";
exports.ids = ["vendor-chunks/@tiptap+extension-task-item@2.11.5_@tiptap+core@2.11.5_@tiptap+pm@2.11.5__@tiptap+pm@2.11.5"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tiptap+extension-task-item@2.11.5_@tiptap+core@2.11.5_@tiptap+pm@2.11.5__@tiptap+pm@2.11.5/node_modules/@tiptap/extension-task-item/dist/index.js":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tiptap+extension-task-item@2.11.5_@tiptap+core@2.11.5_@tiptap+pm@2.11.5__@tiptap+pm@2.11.5/node_modules/@tiptap/extension-task-item/dist/index.js ***!
  \*******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TaskItem: () => (/* binding */ TaskItem),\n/* harmony export */   \"default\": () => (/* binding */ TaskItem),\n/* harmony export */   inputRegex: () => (/* binding */ inputRegex)\n/* harmony export */ });\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/.pnpm/@tiptap+core@2.11.5_@tiptap+pm@2.11.5/node_modules/@tiptap/core/dist/index.js\");\n\n\n/**\n * Matches a task item to a - [ ] on input.\n */\nconst inputRegex = /^\\s*(\\[([( |x])?\\])\\s$/;\n/**\n * This extension allows you to create task items.\n * @see https://www.tiptap.dev/api/nodes/task-item\n */\nconst TaskItem = _tiptap_core__WEBPACK_IMPORTED_MODULE_0__.Node.create({\n    name: 'taskItem',\n    addOptions() {\n        return {\n            nested: false,\n            HTMLAttributes: {},\n            taskListTypeName: 'taskList',\n        };\n    },\n    content() {\n        return this.options.nested ? 'paragraph block*' : 'paragraph+';\n    },\n    defining: true,\n    addAttributes() {\n        return {\n            checked: {\n                default: false,\n                keepOnSplit: false,\n                parseHTML: element => {\n                    const dataChecked = element.getAttribute('data-checked');\n                    return dataChecked === '' || dataChecked === 'true';\n                },\n                renderHTML: attributes => ({\n                    'data-checked': attributes.checked,\n                }),\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: `li[data-type=\"${this.name}\"]`,\n                priority: 51,\n            },\n        ];\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        return [\n            'li',\n            (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_0__.mergeAttributes)(this.options.HTMLAttributes, HTMLAttributes, {\n                'data-type': this.name,\n            }),\n            [\n                'label',\n                [\n                    'input',\n                    {\n                        type: 'checkbox',\n                        checked: node.attrs.checked ? 'checked' : null,\n                    },\n                ],\n                ['span'],\n            ],\n            ['div', 0],\n        ];\n    },\n    addKeyboardShortcuts() {\n        const shortcuts = {\n            Enter: () => this.editor.commands.splitListItem(this.name),\n            'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n        };\n        if (!this.options.nested) {\n            return shortcuts;\n        }\n        return {\n            ...shortcuts,\n            Tab: () => this.editor.commands.sinkListItem(this.name),\n        };\n    },\n    addNodeView() {\n        return ({ node, HTMLAttributes, getPos, editor, }) => {\n            const listItem = document.createElement('li');\n            const checkboxWrapper = document.createElement('label');\n            const checkboxStyler = document.createElement('span');\n            const checkbox = document.createElement('input');\n            const content = document.createElement('div');\n            checkboxWrapper.contentEditable = 'false';\n            checkbox.type = 'checkbox';\n            checkbox.addEventListener('mousedown', event => event.preventDefault());\n            checkbox.addEventListener('change', event => {\n                // if the editor isnâ€™t editable and we don't have a handler for\n                // readonly checks we have to undo the latest change\n                if (!editor.isEditable && !this.options.onReadOnlyChecked) {\n                    checkbox.checked = !checkbox.checked;\n                    return;\n                }\n                const { checked } = event.target;\n                if (editor.isEditable && typeof getPos === 'function') {\n                    editor\n                        .chain()\n                        .focus(undefined, { scrollIntoView: false })\n                        .command(({ tr }) => {\n                        const position = getPos();\n                        if (typeof position !== 'number') {\n                            return false;\n                        }\n                        const currentNode = tr.doc.nodeAt(position);\n                        tr.setNodeMarkup(position, undefined, {\n                            ...currentNode === null || currentNode === void 0 ? void 0 : currentNode.attrs,\n                            checked,\n                        });\n                        return true;\n                    })\n                        .run();\n                }\n                if (!editor.isEditable && this.options.onReadOnlyChecked) {\n                    // Reset state if onReadOnlyChecked returns false\n                    if (!this.options.onReadOnlyChecked(node, checked)) {\n                        checkbox.checked = !checkbox.checked;\n                    }\n                }\n            });\n            Object.entries(this.options.HTMLAttributes).forEach(([key, value]) => {\n                listItem.setAttribute(key, value);\n            });\n            listItem.dataset.checked = node.attrs.checked;\n            checkbox.checked = node.attrs.checked;\n            checkboxWrapper.append(checkbox, checkboxStyler);\n            listItem.append(checkboxWrapper, content);\n            Object.entries(HTMLAttributes).forEach(([key, value]) => {\n                listItem.setAttribute(key, value);\n            });\n            return {\n                dom: listItem,\n                contentDOM: content,\n                update: updatedNode => {\n                    if (updatedNode.type !== this.type) {\n                        return false;\n                    }\n                    listItem.dataset.checked = updatedNode.attrs.checked;\n                    checkbox.checked = updatedNode.attrs.checked;\n                    return true;\n                },\n            };\n        };\n    },\n    addInputRules() {\n        return [\n            (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_0__.wrappingInputRule)({\n                find: inputRegex,\n                type: this.type,\n                getAttributes: match => ({\n                    checked: match[match.length - 1] === 'x',\n                }),\n            }),\n        ];\n    },\n});\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tiptap+extension-task-item@2.11.5_@tiptap+core@2.11.5_@tiptap+pm@2.11.5__@tiptap+pm@2.11.5/node_modules/@tiptap/extension-task-item/dist/index.js\n");

/***/ })

};
;